{"ast":null,"code":"var _jsxFileName = \"C:\\\\quizapp\\\\quiz\\\\src\\\\components\\\\Trivia.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport useSound from 'use-sound';\nimport play from \"../assets/play.mp3\";\nimport correct from \"../assets/correct.mp3\";\nimport wrong from \"../assets/wrong.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Trivia(_ref) {\n  _s();\n  let {\n    data,\n    setStop,\n    questionNumber,\n    setQuestionNumber\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n  const handleClick = a => {\n    setSelectedAnswer(a);\n    setClassName(\"answer active\");\n    delay(3000, () => setClassName(a.correct ? \"answer correct\" : \"answer wrong\"));\n    delay(6000, () => {\n      if (a.correct) {\n        setQuestionNumber(prev => prev + 1);\n        setSelectedAnswer(null);\n      } else {\n        setStop(true);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trivia\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: question === null || question === void 0 ? void 0 : question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: question === null || question === void 0 ? void 0 : question.answers.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: selectedAnswer === a ? className : \"answer\",\n        onClick: () => handleClick(a),\n        children: a.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_s(Trivia, \"Tv1XC04UB9w3KQ5Dh4QgLKaM4qo=\");\n_c = Trivia;\nvar _c;\n$RefreshReg$(_c, \"Trivia\");","map":{"version":3,"names":["React","useEffect","useState","useSound","play","correct","wrong","Trivia","data","setStop","questionNumber","setQuestionNumber","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","delay","duration","callback","setTimeout","handleClick","a","prev","answers","map","text"],"sources":["C:/quizapp/quiz/src/components/Trivia.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport useSound from 'use-sound';\r\nimport play from \"../assets/play.mp3\";\r\nimport correct from \"../assets/correct.mp3\";\r\nimport wrong from \"../assets/wrong.mp3\";\r\n\r\nexport default function Trivia({\r\n    data,\r\n    setStop,\r\n    questionNumber,\r\n    setQuestionNumber\r\n\r\n}) {\r\n    const [question, setQuestion] = useState(null);\r\n    const [selectedAnswer,setSelectedAnswer] = useState(null);\r\n    const [className,setClassName] = useState(\"answer\");\r\n    useEffect (() =>{\r\n        setQuestion(data[questionNumber-1]);\r\n    },[data,questionNumber]);\r\n\r\n    const delay = (duration,callback) =>{\r\n        setTimeout(()=>{\r\n            callback();\r\n        },duration);\r\n\r\n    }\r\n\r\n\r\n    const handleClick = (a) =>{\r\n        setSelectedAnswer(a);\r\n        setClassName(\"answer active\");\r\n        delay(3000,()=>setClassName(a.correct? \"answer correct\":\"answer wrong\"));\r\n        delay(6000,()=>{\r\n            if(a.correct)\r\n            {\r\n                setQuestionNumber((prev)=> prev+1);\r\n                setSelectedAnswer(null);\r\n            }\r\n            else{\r\n                setStop(true);\r\n            }\r\n\r\n        })\r\n        \r\n\r\n    }\r\n  return (\r\n      <div className=\"trivia\">\r\n      <div className=\"questions\">{question?.question}</div>\r\n      <div className=\"answers\">\r\n          {question?.answers.map((a)=>(\r\n            <div className={selectedAnswer === a ? className : \"answer\"} onClick={() => handleClick(a)}>{a.text}</div>\r\n          ))}\r\n          \r\n         \r\n      \r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,eAAe,SAASC,MAAM,OAM3B;EAAA;EAAA,IAN4B;IAC3BC,IAAI;IACJC,OAAO;IACPC,cAAc;IACdC;EAEJ,CAAC;EACG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,cAAc,EAACC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACzD,MAAM,CAACc,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EACnDD,SAAS,CAAE,MAAK;IACZY,WAAW,CAACL,IAAI,CAACE,cAAc,GAAC,CAAC,CAAC,CAAC;EACvC,CAAC,EAAC,CAACF,IAAI,EAACE,cAAc,CAAC,CAAC;EAExB,MAAMQ,KAAK,GAAG,CAACC,QAAQ,EAACC,QAAQ,KAAI;IAChCC,UAAU,CAAC,MAAI;MACXD,QAAQ,EAAE;IACd,CAAC,EAACD,QAAQ,CAAC;EAEf,CAAC;EAGD,MAAMG,WAAW,GAAIC,CAAC,IAAI;IACtBR,iBAAiB,CAACQ,CAAC,CAAC;IACpBN,YAAY,CAAC,eAAe,CAAC;IAC7BC,KAAK,CAAC,IAAI,EAAC,MAAID,YAAY,CAACM,CAAC,CAAClB,OAAO,GAAE,gBAAgB,GAAC,cAAc,CAAC,CAAC;IACxEa,KAAK,CAAC,IAAI,EAAC,MAAI;MACX,IAAGK,CAAC,CAAClB,OAAO,EACZ;QACIM,iBAAiB,CAAEa,IAAI,IAAIA,IAAI,GAAC,CAAC,CAAC;QAClCT,iBAAiB,CAAC,IAAI,CAAC;MAC3B,CAAC,MACG;QACAN,OAAO,CAAC,IAAI,CAAC;MACjB;IAEJ,CAAC,CAAC;EAGN,CAAC;EACH,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACvB;MAAK,SAAS,EAAC,WAAW;MAAA,UAAEG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,eACrD;MAAK,SAAS,EAAC,SAAS;MAAA,UACnBA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEa,OAAO,CAACC,GAAG,CAAEH,CAAC,iBACvB;QAAK,SAAS,EAAET,cAAc,KAAKS,CAAC,GAAGP,SAAS,GAAG,QAAS;QAAC,OAAO,EAAE,MAAMM,WAAW,CAACC,CAAC,CAAE;QAAA,UAAEA,CAAC,CAACI;MAAI;QAAA;QAAA;QAAA;MAAA,QACpG;IAAC;MAAA;MAAA;MAAA;IAAA,QAIA;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ;AAAC,GArDuBpB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}